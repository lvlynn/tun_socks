!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ICMP	tun.c	20;"	d	file:
ICMP_PKG	libnet/ip.h	/^    ICMP_PKG,$/;"	e	enum:__anon1
IGMP	tun.c	21;"	d	file:
IGRP	tun.c	24;"	d	file:
IP4_8	libnet/ip.c	17;"	d	file:
IP4_STR	libnet/ip.c	18;"	d	file:
IP_CHK	libnet/ip.h	16;"	d
IP_PKG	libnet/ip.h	/^    IP_PKG = 1,$/;"	e	enum:__anon1
OSPF	tun.c	25;"	d	file:
PKG_TYPE	libnet/ip.h	/^}PKG_TYPE;$/;"	v	typeref:enum:__anon1
TCP	tun.c	22;"	d	file:
TCPOLEN_EXP_FASTOPEN_BASE	libnet/tcp.h	36;"	d
TCPOLEN_FASTOPEN_BASE	libnet/tcp.h	35;"	d
TCPOLEN_MD5SIG	libnet/tcp.h	34;"	d
TCPOLEN_MD5SIG_ALIGNED	libnet/tcp.h	45;"	d
TCPOLEN_MSS	libnet/tcp.h	30;"	d
TCPOLEN_MSS_ALIGNED	libnet/tcp.h	46;"	d
TCPOLEN_SACKPERM_ALIGNED	libnet/tcp.h	41;"	d
TCPOLEN_SACK_BASE	libnet/tcp.h	42;"	d
TCPOLEN_SACK_BASE_ALIGNED	libnet/tcp.h	43;"	d
TCPOLEN_SACK_PERBLOCK	libnet/tcp.h	44;"	d
TCPOLEN_SACK_PERM	libnet/tcp.h	32;"	d
TCPOLEN_TIMESTAMP	libnet/tcp.h	33;"	d
TCPOLEN_TSTAMP_ALIGNED	libnet/tcp.h	39;"	d
TCPOLEN_WINDOW	libnet/tcp.h	31;"	d
TCPOLEN_WSCALE_ALIGNED	libnet/tcp.h	40;"	d
TCPOPT_EOL	libnet/tcp.h	12;"	d
TCPOPT_EXP	libnet/tcp.h	20;"	d
TCPOPT_FASTOPEN	libnet/tcp.h	19;"	d
TCPOPT_FASTOPEN_MAGIC	libnet/tcp.h	24;"	d
TCPOPT_MD5SIG	libnet/tcp.h	18;"	d
TCPOPT_MSS	libnet/tcp.h	13;"	d
TCPOPT_NOP	libnet/tcp.h	11;"	d
TCPOPT_SACK	libnet/tcp.h	16;"	d
TCPOPT_SACK_PERM	libnet/tcp.h	15;"	d
TCPOPT_TIMESTAMP	libnet/tcp.h	17;"	d
TCPOPT_WINDOW	libnet/tcp.h	14;"	d
TCP_CHK	libnet/ip.h	17;"	d
TCP_PKG	libnet/ip.h	/^    TCP_PKG,$/;"	e	enum:__anon1
TCP_PKG_LEN	libnet/ip.h	27;"	d
UDP	tun.c	23;"	d	file:
UDP_PKG	libnet/ip.h	/^    UDP_PKG,$/;"	e	enum:__anon1
UDP_PKG_LEN	libnet/ip.h	28;"	d
_CONNECTION_H_	libnet/connection.h	2;"	d
_LOG_H_	libnet/log.h	2;"	d
_NT_TCP_H_	libnet/tcp.h	2;"	d
__MYTCPIP_H__	libnet/ip.h	2;"	d
_debug	libnet/log.h	/^static void _debug( const char *f,   char *fmt, ... )$/;"	f
ack_seq	libnet/tcp.h	/^    uint32_t ack_seq ;$/;"	m	struct:tcp_info_s
cal_chksum	tun.c	/^unsigned short cal_chksum( unsigned short * addr, int len )$/;"	f
chk	libnet/ip.c	/^unsigned long chk( const unsigned  short * data, int size )$/;"	f
chksum	libnet/ip.c	/^unsigned short chksum( const char *data, int size, int type )$/;"	f
connection_s	libnet/connection.h	/^struct connection_s {$/;"	s
create_pkg	libnet/ip.c	/^int create_pkg( const char *data, char *pkg )$/;"	f
daddr	libnet/ip.h	/^    unsigned int daddr;$/;"	m	struct:__anon2
data	tun.c	/^    unsigned char data[4096];$/;"	m	struct:tun_data	file:
debug	libnet/log.h	36;"	d
handle_tcp	libnet/tcp.c	/^int handle_tcp( char *data, int tunfd )$/;"	f
hdr_len	libnet/tcp.h	/^    int16_t hdr_len ; \/\/tcp 头部长度，包含option$/;"	m	struct:tcp_info_s
ih	libnet/connection.h	/^    struct iphdr *ih;$/;"	m	struct:nt_skb_s	typeref:struct:nt_skb_s::iphdr
interface_up	tun.c	/^int interface_up( char *interface_name )$/;"	f
ip	libnet/tcp.h	/^            uint32_t ip;$/;"	m	struct:tcp_pcb_s::__anon4::__anon5
ip	libnet/tcp.h	/^            uint32_t ip;$/;"	m	struct:tcp_pcb_s::__anon7::__anon8
ip	libnet/tcp.h	/^            uint8_t ip[16];$/;"	m	struct:tcp_pcb_s::__anon4::__anon6
ip	libnet/tcp.h	/^            uint8_t ip[16];$/;"	m	struct:tcp_pcb_s::__anon7::__anon9
ip	tun.c	/^    struct ip *ip;$/;"	m	struct:tun_data	typeref:struct:tun_data::ip	file:
ip_chk	libnet/ip.c	/^static unsigned short ip_chk( const unsigned short *data, int size )$/;"	f	file:
ip_create	libnet/ip.c	/^struct iphdr * ip_create( const char *data, char *pkg )$/;"	f
ip_input	libnet/ip.c	/^int ip_input( const char *data ){$/;"	f
ip_version	libnet/connection.h	/^    uint8_t ip_version;  \/\/ipv4 or ipv6$/;"	m	struct:nt_skb_s
ipcheck	tun.c	/^short ipcheck( unsigned short * buf, int size )$/;"	f
iphdr_len	libnet/connection.h	/^    uint8_t iphdr_len;  \/\/ipv4 or ipv6$/;"	m	struct:nt_skb_s
ipv4_dst	libnet/tcp.h	/^        } ipv4_dst;$/;"	m	union:tcp_pcb_s::__anon7	typeref:struct:tcp_pcb_s::__anon7::__anon8
ipv4_input	libnet/ip.c	/^int ipv4_input( nt_conn_t *conn ){$/;"	f
ipv4_src	libnet/tcp.h	/^        }  ipv4_src;$/;"	m	union:tcp_pcb_s::__anon4	typeref:struct:tcp_pcb_s::__anon4::__anon5
ipv6_dst	libnet/tcp.h	/^        } ipv6_dst;$/;"	m	union:tcp_pcb_s::__anon7	typeref:struct:tcp_pcb_s::__anon7::__anon9
ipv6_src	libnet/tcp.h	/^        } ipv6_src;$/;"	m	union:tcp_pcb_s::__anon4	typeref:struct:tcp_pcb_s::__anon4::__anon6
main	tun.c	/^int main()$/;"	f
mbz	libnet/ip.h	/^    unsigned char mbz; \/\/mbz = 0;$/;"	m	struct:__anon2
ndt	libnet/connection.h	/^    nt_skb_t *ndt;$/;"	m	struct:connection_s
nt_conn_t	libnet/connection.h	/^typedef struct connection_s nt_conn_t;$/;"	t	typeref:struct:connection_s
nt_skb_s	libnet/connection.h	/^struct nt_skb_s {$/;"	s
nt_skb_t	libnet/connection.h	/^typedef struct nt_skb_s nt_skb_t;$/;"	t	typeref:struct:nt_skb_s
nt_tcp_info_t	libnet/tcp.h	/^typedef struct tcp_info_s nt_tcp_info_t; $/;"	t	typeref:struct:tcp_info_s
nt_tpcb_t	libnet/tcp.h	/^typedef struct tcp_pcb_s nt_tpcb_t; $/;"	t	typeref:struct:tcp_pcb_s
odt	libnet/connection.h	/^    nt_skb_t *odt;   \/\/ 存seq跟ack信息$/;"	m	struct:connection_s
payload	libnet/tcp.h	/^    char *payload; \/\/载荷$/;"	m	struct:tcp_info_s
payload_len	libnet/tcp.h	/^    int16_t payload_len; \/\/载荷长度$/;"	m	struct:tcp_info_s
pcb	libnet/connection.h	/^    nt_tpcb_t *pcb;$/;"	m	struct:connection_s
port	libnet/tcp.h	/^            uint16_t port;$/;"	m	struct:tcp_pcb_s::__anon4::__anon5
port	libnet/tcp.h	/^            uint16_t port;$/;"	m	struct:tcp_pcb_s::__anon4::__anon6
port	libnet/tcp.h	/^            uint16_t port;$/;"	m	struct:tcp_pcb_s::__anon7::__anon8
port	libnet/tcp.h	/^            uint16_t port;$/;"	m	struct:tcp_pcb_s::__anon7::__anon9
print_pkg	libnet/ip.c	/^void print_pkg( char *data )$/;"	f
protocol	libnet/connection.h	/^    uint8_t protocol; \/\/协议类型$/;"	m	struct:nt_skb_s
pshead	libnet/ip.h	/^}pshead;$/;"	t	typeref:struct:__anon2
ptcl	libnet/ip.h	/^    unsigned char ptcl;\/\/proto num; tcp = 6;$/;"	m	struct:__anon2
route_add	tun.c	/^int route_add( char *interface_name )$/;"	f
saddr	libnet/ip.h	/^    unsigned int saddr;$/;"	m	struct:__anon2
seq	libnet/tcp.h	/^    uint32_t seq ;$/;"	m	struct:tcp_info_s
set_ipaddr	tun.c	/^int set_ipaddr( char * interface_name, char *ip )$/;"	f
skb	libnet/connection.h	/^    char *skb ;  \/\/接收的数据包$/;"	m	struct:nt_skb_s
skb_len	libnet/connection.h	/^    uint8_t skb_len;$/;"	m	struct:nt_skb_s
t_data	tun.c	/^} t_data;$/;"	t	typeref:struct:tun_data	file:
tcp_chk	libnet/ip.c	/^static unsigned short tcp_chk( const unsigned short *data, int size )$/;"	f	file:
tcp_create	libnet/tcp.c	/^void tcp_create( const char *data, char *pkg )$/;"	f
tcp_info	libnet/connection.h	/^        nt_tcp_info_t  tcp_info;$/;"	m	union:nt_skb_s::__anon3
tcp_info_s	libnet/tcp.h	/^struct tcp_info_s{$/;"	s
tcp_input	libnet/tcp.c	/^int tcp_input(nt_conn_t *conn){$/;"	f
tcp_parse_option	libnet/tcp.c	/^void tcp_parse_option( char *data )$/;"	f
tcp_pcb_s	libnet/tcp.h	/^struct tcp_pcb_s {$/;"	s
tcpl	libnet/ip.h	/^    unsigned short tcpl; \/\/tcp头部及头层皮载荷长度; 为网络字节; htons(int);$/;"	m	struct:__anon2
th	libnet/tcp.h	/^    struct tcphdr *th;    $/;"	m	struct:tcp_info_s	typeref:struct:tcp_info_s::tcphdr
tl_proto	tun.c	/^    void * tl_proto;$/;"	m	struct:tun_data	file:
tun	tun.c	/^int tun;$/;"	v
tun_create	tun.c	/^int tun_create( char *dev, int flags )$/;"	f
tun_data	tun.c	/^typedef struct tun_data {$/;"	s	file:
type	libnet/connection.h	/^    uint8_t type;$/;"	m	struct:nt_skb_s
udp_create	libnet/ip.c	/^static void udp_create( const char *data, char *pkg )$/;"	f	file:
